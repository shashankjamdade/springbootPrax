name: Build, Push, and Deploy Docker Image

on:
  push:
    branches:
      - master
  pull_request:

jobs:
  docker:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout code
      - name: Checkout repository
        uses: actions/checkout@v3

      # 2. Set up JDK for Maven
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      # 3. Build JAR with Maven
      - name: Build with Maven
        run: mvn clean package -DskipTests

      # 4. Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # 5. Build and push Docker image
      - name: Build and Push Docker Image
        uses: docker/build-push-action@v4
        with:
          push: true
          tags: jshashank388/mongox:latest

      # ðŸš« Commented Railway Deployment
      # - name: Install Railway CLI
      #   run: |
      #     curl -sSL https://railway.app/install.sh | sh
      #
      # - name: Deploy to Railway
      #   env:
      #     RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}
      #     RAILWAY_PROJECT_ID: ${{ secrets.RAILWAY_PROJECT_ID }}
      #   run: |
      #     railway up --detach --service mongox

      # 6. Deploy Docker container to EC2
      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.8.1
        with:
          ssh-private-key: ${{ secrets.EC2_KEY }}

      - name: Deploy to EC2
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} "
            docker pull jshashank388/mongox:latest &&
            docker stop mongox || true &&
            docker rm mongox || true &&
            docker run -d --name mongox -p 8080:8080 jshashank388/mongox:latest
          "
